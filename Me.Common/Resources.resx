<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Begin" xml:space="preserve">
    <value>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; BEGIN mode {0}</value>
  </data>
  <data name="ConsoleMode" xml:space="preserve">
    <value>Console mode</value>
  </data>
  <data name="DeletingFile" xml:space="preserve">
    <value>Deleting file {0}</value>
  </data>
  <data name="DeletingFolder" xml:space="preserve">
    <value>Deleting folder {0}</value>
  </data>
  <data name="End" xml:space="preserve">
    <value>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; END mode {0} : Exitcode={1}</value>
  </data>
  <data name="ExecFtpSync" xml:space="preserve">
    <value>Executing FTPSync process</value>
  </data>
  <data name="ExeFolderName" xml:space="preserve">
    <value>FTPSync.exe folder= {0}</value>
  </data>
  <data name="ExePath" xml:space="preserve">
    <value>Path to FTPSync.exe file= {0}</value>
  </data>
  <data name="FoundMovie" xml:space="preserve">
    <value>Found a serie {0} file= {1}</value>
  </data>
  <data name="FTPSync" xml:space="preserve">
    <value>FTPSync directly.</value>
  </data>
  <data name="FTPSyncError_0" xml:space="preserve">
    <value>synchronization was successful</value>
  </data>
  <data name="FTPSyncError_1" xml:space="preserve">
    <value>could not connect to FTP server (either source or destination)</value>
  </data>
  <data name="FTPSyncError_2" xml:space="preserve">
    <value>error during copy (some files where probably copied, but not all; or aborted by user)</value>
  </data>
  <data name="FTPSyncError_3" xml:space="preserve">
    <value>error during directory parsing (connection was successful, but FTPSync was unable to read source directory and build file index; no copying has been done)</value>
  </data>
  <data name="FTPSyncError_4" xml:space="preserve">
    <value>initialization error (most likely, something is wrong in the .INI file)</value>
  </data>
  <data name="FTPSyncError_Undefined" xml:space="preserve">
    <value>Undefined error</value>
  </data>
  <data name="FTPSyncExitCode" xml:space="preserve">
    <value>Ended FtpSync process with Exitcode: {0}</value>
  </data>
  <data name="GetDownloadedList" xml:space="preserve">
    <value>Getting downloaded files list</value>
  </data>
  <data name="GetExeFolder" xml:space="preserve">
    <value>Getting FTPSync exe folder</value>
  </data>
  <data name="GetExePath" xml:space="preserve">
    <value>Getting FTPSync.exe path</value>
  </data>
  <data name="GetIni" xml:space="preserve">
    <value>Getting ini fileName</value>
  </data>
  <data name="GetSeriesList" xml:space="preserve">
    <value>Getting series files list</value>
  </data>
  <data name="GetSeriesName" xml:space="preserve">
    <value>Getting series name</value>
  </data>
  <data name="GUIMode" xml:space="preserve">
    <value>MeFTPSyncHelper GUI mode.</value>
  </data>
  <data name="IniName" xml:space="preserve">
    <value>ini file name= {0}</value>
  </data>
  <data name="MovingFile" xml:space="preserve">
    <value>Moving file {0} to {1}</value>
  </data>
  <data name="NewMovieAdded" xml:space="preserve">
    <value>{0}: A new file {1} were added in {2} serie !</value>
  </data>
  <data name="NoDownload" xml:space="preserve">
    <value>No file was downloaded today !</value>
  </data>
  <data name="NotFound" xml:space="preserve">
    <value>{0}: No file was found in series !</value>
  </data>
  <data name="Parsing" xml:space="preserve">
    <value>Parsing FTPSync.exe error in event handler</value>
  </data>
  <data name="Running" xml:space="preserve">
    <value>Application is running</value>
  </data>
  <data name="StartFtpSync" xml:space="preserve">
    <value>Start FtpSync process with arguments: {0}</value>
  </data>
  <data name="Storing" xml:space="preserve">
    <value>Storing downloaded files</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Prints version information to standard output.</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="favicon" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\favicon.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Usage" xml:space="preserve">
    <value>Usage: {0}</value>
  </data>
  <data name="GuiExitCode" xml:space="preserve">
    <value>Gui exitcode: {0}</value>
  </data>
  <data name="FileNotFound" xml:space="preserve">
    <value>File "{0}" was not found</value>
  </data>
</root>